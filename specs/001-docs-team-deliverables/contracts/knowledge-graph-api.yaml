openapi: 3.0.3
info:
  title: AI Module - Knowledge Graph Query API
  description: API for querying knowledge graphs and entity relationships
  version: 1.0.0
  contact:
    name: AI Module Team
    email: ai-team@knowledge-graph-lab.com

servers:
  - url: https://api.knowledge-graph-lab.com/ai/v1
    description: Production
  - url: https://staging-api.knowledge-graph-lab.com/ai/v1
    description: Staging
  - url: http://localhost:8000/ai/v1
    description: Local development

paths:
  /graph/query:
    post:
      summary: Query knowledge graph
      description: Search for entities and relationships in the knowledge graph
      operationId: queryGraph
      tags:
        - Knowledge Graph
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQueryRequest'
            examples:
              entitySearch:
                summary: Entity search query
                value:
                  query: "OpenAI funding"
                  query_type: "entity_search"
                  filters:
                    entity_types: ["organization", "person"]
                    relationship_types: ["fund", "partner"]
                    confidence_threshold: 0.8
                    limit: 50
              similaritySearch:
                summary: Similarity search query
                value:
                  query: "AI research companies"
                  query_type: "similarity_search"
                  filters:
                    entity_types: ["organization"]
                    confidence_threshold: 0.7
                    limit: 20
      responses:
        '200':
          description: Query executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphQueryResponse'
        '400':
          description: Bad request - invalid query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid or missing authentication
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /graph/entity/{entity_id}:
    get:
      summary: Get entity with relationships
      description: Retrieve a specific entity and its immediate relationships
      operationId: getEntity
      tags:
        - Knowledge Graph
      security:
        - bearerAuth: []
      parameters:
        - name: entity_id
          in: path
          required: true
          description: Entity identifier
          schema:
            type: string
            format: uuid
        - name: include_relationships
          in: query
          required: false
          description: Include relationships in response
          schema:
            type: boolean
            default: true
        - name: relationship_depth
          in: query
          required: false
          description: Number of degrees of relationships to include (1-3)
          schema:
            type: integer
            minimum: 1
            maximum: 3
            default: 1
      responses:
        '200':
          description: Entity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDetailResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /graph/similarity:
    post:
      summary: Find similar entities
      description: Find entities similar to a given entity or text using vector embeddings
      operationId: findSimilar
      tags:
        - Knowledge Graph
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimilarityRequest'
      responses:
        '200':
          description: Similar entities found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityResponse'
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    GraphQueryRequest:
      type: object
      required:
        - query
        - query_type
      properties:
        query:
          type: string
          description: Search query text
          minLength: 1
          maxLength: 500
        query_type:
          type: string
          enum: [entity_search, similarity_search, relationship_query]
          description: Type of query to perform
        filters:
          $ref: '#/components/schemas/QueryFilters'

    QueryFilters:
      type: object
      properties:
        entity_types:
          type: array
          items:
            type: string
            enum: [organization, person, funding_amount, date, location]
          description: Filter by entity types
        relationship_types:
          type: array
          items:
            type: string
            enum: [fund, partner, acquire, compete, collaborate, mention]
          description: Filter by relationship types
        confidence_threshold:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          default: 0.7
          description: Minimum confidence score
        date_range:
          $ref: '#/components/schemas/DateRange'
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 50
          description: Maximum number of results

    DateRange:
      type: object
      properties:
        from:
          type: string
          format: date
          description: Start date (ISO 8601)
        to:
          type: string
          format: date
          description: End date (ISO 8601)

    GraphQueryResponse:
      type: object
      required:
        - query_id
        - total_results
        - execution_time_ms
        - results
      properties:
        query_id:
          type: string
          format: uuid
          description: Query identifier
        total_results:
          type: integer
          description: Total number of results found
        execution_time_ms:
          type: integer
          description: Query execution time in milliseconds
        results:
          $ref: '#/components/schemas/GraphResults'

    GraphResults:
      type: object
      required:
        - entities
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityWithRelationships'
        knowledge_graph:
          $ref: '#/components/schemas/KnowledgeGraphVisualization'

    EntityWithRelationships:
      type: object
      required:
        - id
        - text
        - type
        - confidence
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        type:
          type: string
          enum: [organization, person, funding_amount, date, location]
        confidence:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
        metadata:
          type: object
          additionalProperties: true
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipSummary'

    RelationshipSummary:
      type: object
      required:
        - target_entity
        - relationship_type
        - confidence
        - direction
      properties:
        target_entity:
          type: string
          description: Target entity name/text
        target_entity_id:
          type: string
          format: uuid
        relationship_type:
          type: string
          enum: [fund, partner, acquire, compete, collaborate, mention]
        confidence:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
        direction:
          type: string
          enum: [incoming, outgoing, bidirectional]
          description: Direction of relationship relative to source entity

    EntityDetailResponse:
      type: object
      required:
        - entity
      properties:
        entity:
          $ref: '#/components/schemas/EntityWithRelationships'
        relationship_graph:
          $ref: '#/components/schemas/KnowledgeGraphVisualization'

    KnowledgeGraphVisualization:
      type: object
      required:
        - nodes
        - edges
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/GraphNode'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/GraphEdge'
        layout:
          type: string
          enum: [force_directed, hierarchical, circular]
          default: force_directed
          description: Suggested visualization layout

    GraphNode:
      type: object
      required:
        - id
        - label
        - type
      properties:
        id:
          type: string
          format: uuid
        label:
          type: string
          description: Node label (entity text)
        type:
          type: string
          enum: [organization, person, funding_amount, date, location]
        confidence:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
        metadata:
          type: object
          additionalProperties: true

    GraphEdge:
      type: object
      required:
        - source
        - target
        - type
      properties:
        source:
          type: string
          format: uuid
          description: Source node ID
        target:
          type: string
          format: uuid
          description: Target node ID
        type:
          type: string
          enum: [fund, partner, acquire, compete, collaborate, mention]
        confidence:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
        weight:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          description: Edge weight for visualization

    SimilarityRequest:
      type: object
      properties:
        entity_id:
          type: string
          format: uuid
          description: Find entities similar to this entity (mutually exclusive with text)
        text:
          type: string
          description: Find entities similar to this text (mutually exclusive with entity_id)
          minLength: 1
          maxLength: 500
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
          description: Maximum number of similar entities to return
        confidence_threshold:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          default: 0.7
      oneOf:
        - required: [entity_id]
        - required: [text]

    SimilarityResponse:
      type: object
      required:
        - similar_entities
        - execution_time_ms
      properties:
        similar_entities:
          type: array
          items:
            $ref: '#/components/schemas/SimilarEntity'
        execution_time_ms:
          type: integer
          description: Query execution time in milliseconds

    SimilarEntity:
      type: object
      required:
        - entity
        - similarity_score
      properties:
        entity:
          $ref: '#/components/schemas/EntityWithRelationships'
        similarity_score:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          description: Cosine similarity score (0.0-1.0)

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          additionalProperties: true

    RateLimitErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            retry_after_seconds:
              type: integer
              description: Seconds to wait before retrying
