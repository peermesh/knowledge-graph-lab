openapi: 3.0.3
info:
  title: Publishing Module API
  description: Multi-channel content publishing system with personalization and analytics
  version: 1.0.0
  contact:
    name: Publishing Module Team
    email: publishing@knowledge-graph-lab.com

servers:
  - url: https://api.knowledge-graph-lab.com/v1/publishing
    description: Production server
  - url: https://staging-api.knowledge-graph-lab.com/v1/publishing
    description: Staging server
  - url: http://localhost:8080/api/v1
    description: Development server

security:
  - bearerAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns service health status for container orchestration
      operationId: healthCheck
      tags:
        - health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is unhealthy

  /publications:
    post:
      summary: Create new publication
      description: Create a new publication with content selection and channel targeting
      operationId: createPublication
      tags:
        - publications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublicationRequest'
      responses:
        '201':
          description: Publication created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
        '500':
          description: Internal server error

    get:
      summary: List publications
      description: Retrieve publications with optional filtering
      operationId: listPublications
      tags:
        - publications
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [scheduled, processing, completed, failed, cancelled]
        - name: channel_type
          in: query
          schema:
            type: string
            enum: [email, slack, discord, webhook, rss]
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Publications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationListResponse'
        '401':
          description: Authentication required

  /publications/{id}:
    get:
      summary: Get publication details
      description: Retrieve publication status and delivery results
      operationId: getPublication
      tags:
        - publications
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Publication details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationResponse'
        '404':
          description: Publication not found
        '401':
          description: Authentication required

    delete:
      summary: Cancel publication
      description: Cancel a scheduled publication
      operationId: cancelPublication
      tags:
        - publications
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Publication cancelled successfully
        '404':
          description: Publication not found
        '409':
          description: Publication cannot be cancelled (already processing/completed)

  /subscribers:
    post:
      summary: Create or update subscriber
      description: Create or update subscriber preferences and personalization data
      operationId: createSubscriber
      tags:
        - subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
      responses:
        '201':
          description: Subscriber created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '200':
          description: Subscriber updated successfully
        '400':
          description: Invalid request data

    get:
      summary: List subscribers
      description: Retrieve subscribers with optional filtering
      operationId: listSubscribers
      tags:
        - subscribers
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, paused, unsubscribed]
        - name: email
          in: query
          schema:
            type: string
            format: email
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Subscribers retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberListResponse'

  /subscribers/{id}:
    get:
      summary: Get subscriber details
      description: Retrieve subscriber profile and preferences
      operationId: getSubscriber
      tags:
        - subscribers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Subscriber details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberResponse'
        '404':
          description: Subscriber not found

    put:
      summary: Update subscriber preferences
      description: Update subscriber channel preferences and personalization settings
      operationId: updateSubscriber
      tags:
        - subscribers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequest'
      responses:
        '200':
          description: Subscriber updated successfully
        '404':
          description: Subscriber not found
        '400':
          description: Invalid request data

  /channels:
    post:
      summary: Create publishing channel
      description: Configure new publishing channel with API credentials
      operationId: createChannel
      tags:
        - channels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelRequest'
      responses:
        '201':
          description: Channel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponse'
        '400':
          description: Invalid request data
        '409':
          description: Channel name already exists

    get:
      summary: List publishing channels
      description: Retrieve configured publishing channels
      operationId: listChannels
      tags:
        - channels
      parameters:
        - name: channel_type
          in: query
          schema:
            type: string
            enum: [email, slack, discord, webhook, rss]
        - name: is_active
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Channels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'

  /channels/{id}:
    get:
      summary: Get channel details
      description: Retrieve channel configuration and status
      operationId: getChannel
      tags:
        - channels
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Channel details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponse'
        '404':
          description: Channel not found

    put:
      summary: Update channel configuration
      description: Update channel settings and credentials
      operationId: updateChannel
      tags:
        - channels
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelRequest'
      responses:
        '200':
          description: Channel updated successfully
        '404':
          description: Channel not found
        '400':
          description: Invalid request data

    delete:
      summary: Deactivate channel
      description: Deactivate a publishing channel
      operationId: deactivateChannel
      tags:
        - channels
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Channel deactivated successfully
        '404':
          description: Channel not found

  /channels/{id}/test:
    post:
      summary: Test channel configuration
      description: Test channel configuration with sample content
      operationId: testChannel
      tags:
        - channels
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Channel test successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelTestResponse'
        '404':
          description: Channel not found
        '500':
          description: Channel test failed

  /analytics/engagement:
    get:
      summary: Get engagement analytics
      description: Retrieve engagement metrics for specified time period
      operationId: getEngagementAnalytics
      tags:
        - analytics
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: channel_type
          in: query
          schema:
            type: string
            enum: [email, slack, discord, webhook, rss]
        - name: metric_type
          in: query
          schema:
            type: string
            enum: [open, click, unsubscribe, bounce, complaint]
        - name: group_by
          in: query
          schema:
            type: string
            enum: [day, hour, channel, publication_type]
      responses:
        '200':
          description: Analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'
        '400':
          description: Invalid date range or parameters

  /analytics/performance:
    get:
      summary: Get performance analytics
      description: Get publishing performance metrics and optimization recommendations
      operationId: getPerformanceAnalytics
      tags:
        - analytics
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Performance analytics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalyticsResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CreatePublicationRequest:
      type: object
      required:
        - content_ids
        - channels
        - publication_type
      properties:
        content_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of content to be published
        channels:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of channels for publication
        publication_type:
          type: string
          enum: [newsletter, alert, digest, manual]
        scheduled_time:
          type: string
          format: date-time
          description: When to publish (defaults to immediate)
        personalization_rules:
          type: object
          description: Custom personalization rules for this publication
        template_id:
          type: string
          format: uuid
          description: Template to use for formatting

    PublicationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
            content_ids:
              type: array
              items:
                type: string
                format: uuid
            channels:
              type: array
              items:
                type: string
                format: uuid
            publication_type:
              type: string
              enum: [newsletter, alert, digest, manual]
            scheduled_time:
              type: string
              format: date-time
            published_time:
              type: string
              format: date-time
              nullable: true
            status:
              type: string
              enum: [scheduled, processing, completed, failed, cancelled]
            channel_results:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ChannelResult'
            engagement_metrics:
              type: object
              description: Aggregated engagement metrics
            personalization_applied:
              type: object
              description: Personalization decisions made
            error_details:
              type: string
              nullable: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    ChannelResult:
      type: object
      properties:
        status:
          type: string
          enum: [success, failed, pending, retrying]
        delivered_at:
          type: string
          format: date-time
          nullable: true
        error_message:
          type: string
          nullable: true
        recipient_count:
          type: integer
        engagement_metrics:
          type: object
          description: Channel-specific engagement data

    PublicationListResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            publications:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  content_ids:
                    type: array
                    items:
                      type: string
                      format: uuid
                  channels:
                    type: array
                    items:
                      type: string
                      format: uuid
                  publication_type:
                    type: string
                    enum: [newsletter, alert, digest, manual]
                  scheduled_time:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum: [scheduled, processing, completed, failed, cancelled]
                  created_at:
                    type: string
                    format: date-time
            total_count:
              type: integer
            limit:
              type: integer
            offset:
              type: integer
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    CreateSubscriberRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
        user_id:
          type: string
          format: uuid
          description: Associated user ID (if authenticated)
        preferred_channels:
          type: array
          items:
            type: string
            enum: [email, slack, discord, webhook, rss]
        topic_interests:
          type: object
          additionalProperties:
            type: number
            minimum: 0
            maximum: 1
        frequency_settings:
          type: object
          description: Delivery frequency preferences by channel
        personalization_data:
          type: object
          description: Initial personalization data

    UpdateSubscriberRequest:
      type: object
      properties:
        preferred_channels:
          type: array
          items:
            type: string
            enum: [email, slack, discord, webhook, rss]
        topic_interests:
          type: object
          additionalProperties:
            type: number
            minimum: 0
            maximum: 1
        frequency_settings:
          type: object
        subscription_status:
          type: string
          enum: [active, paused, unsubscribed]

    SubscriberResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
            email:
              type: string
              format: email
            user_id:
              type: string
              format: uuid
              nullable: true
            preferred_channels:
              type: array
              items:
                type: string
                enum: [email, slack, discord, webhook, rss]
            topic_interests:
              type: object
            frequency_settings:
              type: object
            personalization_data:
              type: object
            subscription_status:
              type: string
              enum: [active, paused, unsubscribed]
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    SubscriberListResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            subscribers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  email:
                    type: string
                    format: email
                  subscription_status:
                    type: string
                    enum: [active, paused, unsubscribed]
                  created_at:
                    type: string
                    format: date-time
            total_count:
              type: integer
            limit:
              type: integer
            offset:
              type: integer
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    CreateChannelRequest:
      type: object
      required:
        - name
        - channel_type
        - configuration
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        channel_type:
          type: string
          enum: [email, slack, discord, webhook, rss]
        configuration:
          type: object
          description: Channel-specific configuration (API keys, endpoints, etc.)
        is_active:
          type: boolean
          default: true

    UpdateChannelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        configuration:
          type: object
        is_active:
          type: boolean

    ChannelResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            channel_type:
              type: string
              enum: [email, slack, discord, webhook, rss]
            is_active:
              type: boolean
            configuration:
              type: object
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    ChannelListResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            channels:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  channel_type:
                    type: string
                    enum: [email, slack, discord, webhook, rss]
                  is_active:
                    type: boolean
            total_count:
              type: integer
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    ChannelTestResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        delivered_at:
          type: string
          format: date-time
          nullable: true
        error_details:
          type: string
          nullable: true

    AnalyticsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricData'
        summary:
          type: object
          description: Aggregated metrics summary
        trends:
          type: object
          description: Trend analysis data

    MetricData:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        channel_type:
          type: string
          enum: [email, slack, discord, webhook, rss]
        metric_type:
          type: string
          enum: [open, click, unsubscribe, bounce, complaint]
        value:
          type: number
        count:
          type: integer

    PerformanceAnalyticsResponse:
      type: object
      properties:
        overall_performance:
          type: object
          description: Overall system performance metrics
        channel_performance:
          type: array
          items:
            $ref: '#/components/schemas/ChannelPerformance'
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
        optimization_opportunities:
          type: object
          description: Areas for performance improvement

    ChannelPerformance:
      type: object
      properties:
        channel_type:
          type: string
          enum: [email, slack, discord, webhook, rss]
        success_rate:
          type: number
          minimum: 0
          maximum: 1
        avg_delivery_time:
          type: number
          description: Average delivery time in seconds
        engagement_rate:
          type: number
          minimum: 0
          maximum: 1

    Recommendation:
      type: object
      properties:
        type:
          type: string
          enum: [timing, content, channel, personalization]
        priority:
          type: string
          enum: [high, medium, low]
        description:
          type: string
        expected_impact:
          type: string

    HealthResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            status:
              type: string
              enum: [healthy, unhealthy, degraded]
            timestamp:
              type: string
              format: date-time
            version:
              type: string
            uptime_seconds:
              type: integer
            database_status:
              type: string
              enum: [connected, disconnected, error]
            external_services:
              type: object
              description: Status of external service integrations
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'

    ErrorDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: URI reference identifying the problem type
        title:
          type: string
          description: Short, human-readable summary of the problem
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence
        instance:
          type: string
          format: uri
          description: URI reference identifying the specific occurrence
